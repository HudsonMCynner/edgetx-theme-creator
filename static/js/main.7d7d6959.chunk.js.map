{"version":3,"sources":["utils/Theme.tsx","components/Picker.tsx","components/Colors.tsx","components/Export.tsx","utils/Save.ts","components/Footer.tsx","components/Channels.tsx","components/Model.tsx","components/Navbar.tsx","components/Slider.tsx","components/Sliders.tsx","assets/ETX_bg_480x272.png","components/Screen.tsx","components/Summary.tsx","containers/App.tsx","reportWebVitals.ts","styles/Theme.ts","index.tsx"],"names":["defaultTheme","summary","name","author","info","colors","PRIMARY1","PRIMARY2","PRIMARY3","SECONDARY1","SECONDARY2","SECONDARY3","FOCUS","EDIT","ACTIVE","WARNING","DISABLED","ThemeContext","createContext","theme","onColorChange","onSummaryChange","onReset","ThemeContextProvider","children","useState","setTheme","handleColorChange","useCallback","value","handleSummaryChange","handleReset","bundle","useMemo","Provider","useColors","useContext","Picker","title","anchor","setAnchor","handleOpen","event","currentTarget","handleClose","undefined","handleChange","hex","Box","Chip","size","avatar","Avatar","sx","backgroundColor","label","onClick","component","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","color","onChange","categories","Primary","Secondary","State","Colors","Object","entries","map","category","Typography","variant","Grid","container","spacing","marginBottom","direction","flexWrap","key","item","xs","Export","saveYaml","text","YAML","stringify","replace","_","m1","toUpperCase","file","Blob","saveAs","useSaveYaml","reset","Stack","width","justifyContent","Button","Replay","marginRight","SaveAlt","Footer","paddingY","justifySelf","position","top","display","align","href","Channels","Model","Navbar","height","Slider","left","right","bottom","rotation","transform","flexDirection","Array","fill","i","marginY","marginLeft","Sliders","paddingTop","paddingRight","paddingLeft","paddingBottom","boxSizing","Screen","maxWidth","maxHeight","backgroundImage","image","Summary","useSummary","target","commonProps","fullWidth","TextField","multiline","App","Container","minHeight","padding","gutterBottom","md","Card","elevation","CardContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","responsiveFontSizes","createTheme","palette","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7d7d6959.chunk.js","sourcesContent":["import {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport interface Colors {\n  PRIMARY1: string;\n  PRIMARY2: string;\n  PRIMARY3: string;\n  SECONDARY1: string;\n  SECONDARY2: string;\n  SECONDARY3: string;\n  FOCUS: string;\n  EDIT: string;\n  ACTIVE: string;\n  WARNING: string;\n  DISABLED: string;\n}\n\ninterface Summary {\n  name: string;\n  author: string;\n  info: string;\n}\n\ninterface EdgeTxTheme {\n  summary: Summary;\n  colors: Colors;\n}\n\nconst defaultTheme: EdgeTxTheme = {\n  summary: {\n    name: \"EdgeTX\",\n    author: \"EdgeTX Team\",\n    info: \"The EdgeTX default colors\",\n  },\n  colors: {\n    PRIMARY1: \"#000000\",\n    PRIMARY2: \"#FFFFFF\",\n    PRIMARY3: \"#0C3F66\",\n    SECONDARY1: \"#125E99\",\n    SECONDARY2: \"#B6E0F2\",\n    SECONDARY3: \"#E4EEF2\",\n    FOCUS: \"#14A1E5\",\n    EDIT: \"#009909\",\n    ACTIVE: \"#FFDE00\",\n    WARNING: \"#E00000\",\n    DISABLED: \"#8C8C8C\",\n  },\n};\n\nexport const ThemeContext = createContext<{\n  theme: Partial<EdgeTxTheme>;\n  onColorChange(name: string, value: string): void;\n  onSummaryChange(name: string, value: string): void;\n  onReset(): void;\n}>({\n  theme: defaultTheme,\n  onColorChange: () => {},\n  onSummaryChange: () => {},\n  onReset: () => {},\n});\n\nexport const ThemeContextProvider = ({ children }: PropsWithChildren<{}>) => {\n  const [theme, setTheme] = useState<Partial<EdgeTxTheme>>(defaultTheme);\n  const handleColorChange = useCallback((name: string, value: string) => {\n    setTheme((theme: Partial<EdgeTxTheme>) => ({\n      ...theme,\n      colors: {\n        ...(theme.colors ?? {}),\n        [name]: value,\n      } as Colors,\n    }));\n  }, []);\n  const handleSummaryChange = useCallback((name: string, value: string) => {\n    setTheme((theme: Partial<EdgeTxTheme>) => ({\n      ...theme,\n      summary: {\n        ...(theme.summary ?? {}),\n        [name]: value,\n      } as Summary,\n    }));\n  }, []);\n  const handleReset = useCallback(() => setTheme(defaultTheme), []);\n  const bundle = useMemo(\n    () => ({\n      theme,\n      onColorChange: handleColorChange,\n      onSummaryChange: handleSummaryChange,\n      onReset: handleReset,\n    }),\n    [theme, handleColorChange, handleSummaryChange, handleReset]\n  );\n  return (\n    <ThemeContext.Provider value={bundle}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useColors = (): Partial<Colors> =>\n  useContext(ThemeContext).theme.colors ?? {};\n\nexport const useSummary = (): Partial<Summary> =>\n  useContext(ThemeContext).theme.summary ?? {};\n\nexport const useColorChange = () => useContext(ThemeContext).onColorChange;\n\nexport const useSummaryChange = () => useContext(ThemeContext).onSummaryChange;\n\nexport const useResetTheme = () => useContext(ThemeContext).onReset;\n","import { Avatar, Chip, Popover } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useState, MouseEvent } from \"react\";\nimport { ColorChangeHandler, SketchPicker } from \"react-color\";\nimport { useColorChange } from \"../utils/Theme\";\n\ninterface Props {\n  name: string;\n  value: string;\n  title: string;\n}\n\nexport default function Picker({ name, value, title }: Props) {\n  const [anchor, setAnchor] = useState<HTMLButtonElement>();\n  const handleOpen = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n    []\n  );\n  const handleClose = useCallback(() => setAnchor(undefined), []);\n  const onColorChange = useColorChange();\n  const handleChange: ColorChangeHandler = useCallback(\n    (value) => onColorChange(name, value.hex),\n    [name, onColorChange]\n  );\n  return (\n    <Box>\n      <Chip\n        size=\"small\"\n        avatar={<Avatar sx={{ backgroundColor: value }}>&nbsp;</Avatar>}\n        label={title}\n        onClick={handleOpen}\n        component=\"button\"\n      />\n      <Popover\n        open={!!anchor}\n        anchorEl={anchor}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <SketchPicker color={value} onChange={handleChange} />\n      </Popover>\n    </Box>\n  );\n}\n","import { Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useColors } from \"../utils/Theme\";\nimport Picker from \"./Picker\";\n\nconst categories = {\n  Primary: {\n    PRIMARY1: \"Primary 1\",\n    PRIMARY2: \"Primary 2\",\n    PRIMARY3: \"Primary 3\",\n  },\n  Secondary: {\n    SECONDARY1: \"Secondary 1\",\n    SECONDARY2: \"Secondary 2\",\n    SECONDARY3: \"Secondary 3\",\n  },\n  State: {\n    FOCUS: \"Focus\",\n    EDIT: \"Edit\",\n    ACTIVE: \"Active\",\n    WARNING: \"Warning\",\n    DISABLED: \"Disabled\",\n  },\n};\n\nexport default function Colors() {\n  const colors = useColors();\n  return (\n    <Box>\n      {Object.entries(categories).map(([label, category]) => (\n        <Box>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {label}\n          </Typography>\n          <Grid\n            container\n            spacing={1}\n            marginBottom={1}\n            direction=\"row\"\n            flexWrap=\"wrap\"\n          >\n            {Object.entries(category).map(([key, title]) => (\n              <Grid item xs=\"auto\">\n                <Picker name={key} value={(colors as any)[key]} title={title} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","import { Replay, SaveAlt } from \"@mui/icons-material\";\nimport { Button, Stack } from \"@mui/material\";\nimport { useSaveYaml } from \"../utils/Save\";\nimport { useResetTheme } from \"../utils/Theme\";\n\nexport default function Export() {\n  const saveYaml = useSaveYaml();\n  const reset = useResetTheme();\n\n  return (\n    <Stack spacing={2} direction=\"row\" width=\"100%\" justifyContent=\"flex-end\">\n      <Button variant=\"text\" onClick={reset}>\n        <Replay sx={{ marginRight: 0.5 }} />\n        Reset\n      </Button>\n      <Button variant=\"contained\" onClick={saveYaml}>\n        <SaveAlt sx={{ marginRight: 0.5 }} />\n        Export\n      </Button>\n    </Stack>\n  );\n}\n","import { useCallback, useContext } from \"react\";\nimport { ThemeContext } from \"./Theme\";\nimport YAML from \"yaml\";\nimport { saveAs } from \"file-saver\";\n\nexport function useSaveYaml() {\n  const { theme } = useContext(ThemeContext);\n  return useCallback(() => {\n    const text = YAML.stringify(theme).replace(\n      /\"#(.+)\"/g,\n      (_, m1) => \"0x\" + m1.toUpperCase()\n    );\n    const file = new Blob([text]);\n    saveAs(file, theme.summary?.name + \".yml\");\n  }, [theme]);\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function Footer() {\n  return (\n    <Box\n      paddingY={1}\n      justifySelf=\"end\"\n      sx={{\n        position: \"sticky\",\n        top: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Typography align=\"center\" color=\"textSecondary\" variant=\"caption\">\n        Made for FPV pilots by an FPV pilot{\" \"}\n        <a href=\"https://www.youtube.com/user/edriskus\">@edriskus</a>\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nexport default function Channels() {\n  return <div></div>;\n}\n","import React from \"react\";\n\nexport default function Model() {\n  return <div></div>;\n}\n","import { Box } from \"@mui/system\";\nimport { useColors } from \"../utils/Theme\";\n\nexport default function Navbar() {\n  const { SECONDARY1 } = useColors();\n  return (\n    <Box sx={{ backgroundColor: SECONDARY1 }} width=\"100%\" height=\"17%\"></Box>\n  );\n}\n","import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useColors } from \"../utils/Theme\";\n\ninterface Props {\n  top?: string;\n  left?: string;\n  right?: string;\n  bottom?: string;\n  rotation?: string;\n}\n\nexport default function Slider({ top, left, right, bottom, rotation }: Props) {\n  const { SECONDARY1 } = useColors();\n  return (\n    <Box\n      position=\"absolute\"\n      top={top}\n      left={left}\n      right={right}\n      bottom={bottom}\n      sx={{\n        transform: `rotate(${rotation ?? \"0deg\"})`,\n        display: \"flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <Box>\n        {new Array(40).fill(true).map((_, i) => (\n          <Box\n            sx={{ width: 9, height: \"1px\", backgroundColor: SECONDARY1 }}\n            marginY=\"3px\"\n          />\n        ))}\n      </Box>\n      <Box\n        width={8}\n        height={160}\n        sx={{ backgroundColor: SECONDARY1 }}\n        marginLeft=\"7px\"\n      />\n    </Box>\n  );\n}\n","import { Box } from \"@mui/system\";\nimport { PropsWithChildren } from \"react\";\nimport Slider from \"./Slider\";\n\nexport default function Sliders({ children }: PropsWithChildren<{}>) {\n  return (\n    <Box height=\"83%\" position=\"relative\" width=\"100%\">\n      <Box\n        paddingTop=\"2%\"\n        paddingRight=\"9%\"\n        paddingLeft=\"9%\"\n        paddingBottom=\"10%\"\n        height=\"100%\"\n        boxSizing=\"border-box\"\n      >\n        {children}\n      </Box>\n\n      <Slider top=\"8%\" left=\".8%\" />\n      <Slider top=\"8%\" right=\".8%\" rotation=\"180deg\" />\n      <Slider bottom=\"-29%\" left=\"16%\" rotation=\"-90deg\" />\n      <Slider bottom=\"-29%\" right=\"16%\" rotation=\"-90deg\" />\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/ETX_bg_480x272.0654e17a.png\";","import { Box } from \"@mui/system\";\nimport Channels from \"./Channels\";\nimport Model from \"./Model\";\nimport Navbar from \"./Navbar\";\nimport Sliders from \"./Sliders\";\nimport image from \"../assets/ETX_bg_480x272.png\";\n\nexport default function Screen() {\n  return (\n    <Box\n      position=\"relative\"\n      width={\"100vw\"}\n      maxWidth={480}\n      height={\"56.66vw\"}\n      maxHeight={272}\n      sx={{ backgroundImage: `url(${image})` }}\n    >\n      <Navbar />\n      <Sliders>\n        <Box width=\"100%\" height=\"100%\">\n          <Channels />\n          <Model />\n        </Box>\n      </Sliders>\n    </Box>\n  );\n}\n","import { Stack, TextField, TextFieldProps } from \"@mui/material\";\nimport { ChangeEvent, useCallback } from \"react\";\nimport { useSummary, useSummaryChange } from \"../utils/Theme\";\n\nexport default function Summary() {\n  const { name, author, info } = useSummary();\n  const onSummaryChange = useSummaryChange();\n  const handleChange = useCallback(\n    (key: string) => (event: ChangeEvent<HTMLInputElement>) => {\n      onSummaryChange(key, event.target.value);\n    },\n    [onSummaryChange]\n  );\n  const commonProps: TextFieldProps = {\n    fullWidth: true,\n    size: \"small\",\n  };\n  return (\n    <Stack spacing={2} width=\"100%\">\n      <TextField\n        label=\"Name\"\n        value={name}\n        onChange={handleChange(\"name\")}\n        {...commonProps}\n      />\n      <TextField\n        label=\"Author\"\n        value={author}\n        onChange={handleChange(\"author\")}\n        {...commonProps}\n      />\n      <TextField\n        label=\"Info\"\n        multiline\n        value={info}\n        onChange={handleChange(\"info\")}\n        {...commonProps}\n      />\n    </Stack>\n  );\n}\n","import {\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Colors from \"../components/Colors\";\nimport Export from \"../components/Export\";\nimport Footer from \"../components/Footer\";\nimport Screen from \"../components/Screen\";\nimport Summary from \"../components/Summary\";\n\nfunction App() {\n  return (\n    <Container\n      maxWidth=\"md\"\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <Box\n        padding={2}\n        sx={{\n          display: \"flex\",\n          // alignItems: \"center\",\n          // justifyContent: \"center\",\n          // alignContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Typography variant=\"h2\">EdgeTX Theme Creator</Typography>\n        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\">\n          This is an experimental tool that has only been tested with{\" \"}\n          <b>Edge TX 2.5</b> and on <b>Radiomaster TX16S</b>. The resulting\n          theme might display differently using different radios and might not\n          work with upcoming EdgeTX releases.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Card elevation={4}>\n            <CardContent>\n              <Stack spacing={2} width=\"100%\">\n                <Colors />\n                <Summary />\n\n                <Export />\n              </Stack>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Screen />\n          <Typography\n            variant=\"body2\"\n            gutterBottom\n            color=\"textSecondary\"\n            sx={{ paddingTop: 2 }}\n          >\n            Copy the downloaded file into THEMES directory of you SD card. Then\n            power on the radio and select the theme in UI settings menu.\n            <br />\n            <b>Note:</b> Some widgets might not display the theme colors because\n            they're configurable individually from the widgets menu\n          </Typography>\n        </Grid>\n      </Grid>\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, responsiveFontSizes } from \"@mui/material\";\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    palette: {},\n  })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { theme } from \"./styles/Theme\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { ThemeContextProvider } from \"./utils/Theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ThemeContextProvider>\n        <App />\n      </ThemeContextProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}